<?php
include_once("config.php"); function lastID($dbConn){ $sql = "SELECT count(*) FROM sales"; $result = $dbConn->prepare($sql); $result->execute(); return $result->fetchColumn(); } function previousQuality ($dbConn) { $date = date('Y-m-d'); $sql = "SELECT stock_current FROM stock WHERE `date`=:id"; $query = $dbConn->prepare($sql); $query->execute(array(':id' => $date)); $result = $query->fetch(); if(!$result) { return 0; } return ($result[0]); } if ($_SERVER['REQUEST_METHOD'] == 'POST') { $data = json_decode(file_get_contents("php://input"), true); $sales_receipt = "SBT_".sprintf('%04s', lastID($dbConn)+1); $sales_type = $data['sales_type']; $quantity = $data['quantity']; $customer_name = $data['customer_name']; $customer_phone = $data['customer_phone']; $customer_address = $data['customer_address']; $amount_paid = $data['amount_paid']; $dispatch_id = $data['dispatch_id']; $quantity_return = 0; $quantity_replaced = 0; $date = date("Y-m-d"); if( previousQuality ($dbConn) > $quantity ) { $date = date("Y-m-d"); $sql = "UPDATE stock SET  stock_current=stock_current-:stock_current WHERE date=:id AND stock_current>:stock_current"; $query1 = $dbConn->prepare($sql); $query1->bindparam(':id', $date); $query1->bindparam(':stock_current', $quantity); $result=$query1->execute(); if ($result) { $sql = "INSERT INTO sales (id, sales_receipt, sales_type, quantity, customer_name, customer_phone, customer_address, amount_paid, dispatch_id, quantity_return, quantity_replaced, date) VALUES (null, :sales_receipt, :sales_type, :quantity, :customer_name, :customer_phone, :customer_address, :amount_paid, :dispatch_id, :quantity_return, :quantity_replaced, :date)"; $query = $dbConn->prepare($sql); $query->execute( array( ':sales_receipt' => $sales_receipt, ':sales_type' => $sales_type, ':quantity' => $quantity, ':customer_name' => $customer_name, ':customer_phone' => $customer_phone, ':customer_address' => $customer_address, ':amount_paid' => $amount_paid, ':dispatch_id' => $dispatch_id, ':quantity_return' => $quantity_return, ':quantity_replaced' => $quantity_replaced, ':date' => $date ) ); echo json_encode(['status' => 'success']); } else { echo json_encode(['status' => 'unsuccess']); } } else { echo json_encode(['status' => 'unsuccess']); } $dbConn = null; } if ($_SERVER['REQUEST_METHOD'] == 'PUT') { parse_str(file_get_contents("php://input"), $_PUT); $id = $_PUT['id']; $amount_paid = $_PUT['amount_paid']; $quantity_return = $_PUT['quantity_return']; $quantity_replaced = $_PUT['quantity_replaced']; $sql = "UPDATE sales SET amount_paid=:amount_paid, quantity_return=:quantity_return, quantity_replaced=:quantity_replaced WHERE id=:id"; $query = $dbConn->prepare($sql); $query->execute( array( ':id' => $id, ':amount_paid' => $amount_paid, ':quantity_return' => $quantity_return, ':quantity_replaced' => $quantity_replaced ) ); $dbConn = null; } if ($_SERVER['REQUEST_METHOD'] == 'DELETE') { $data = json_decode(file_get_contents("php://input"), true);$id = $data['id']; $sql = "DELETE FROM sales WHERE id=:id"; $query = $dbConn->prepare($sql); $query->execute( array( ':id' => $id ) ); $dbConn = null; } if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['id'])) { $id = $_GET['id']; $sql = "SELECT * FROM sales WHERE id=:id"; $query = $dbConn->prepare($sql); $query->execute(array(':id' => $id)); $result = $query->fetch(PDO::FETCH_ASSOC); echo json_encode($result); $dbConn = null; } if ($_SERVER['REQUEST_METHOD'] == 'GET' && !isset($_GET['r']) && !isset($_GET['id'])) { $sql = "SELECT * FROM sales"; $query = $dbConn->prepare($sql); $query->execute(); $result = $query->fetchAll(PDO::FETCH_ASSOC); echo json_encode($result); $dbConn = null; } if ($_SERVER['REQUEST_METHOD'] == 'GET' && isset($_GET['r'])) { $date = date("Y-m-d"); $sql = "SELECT * FROM sales WHERE `date`=:id"; $query = $dbConn->prepare($sql); $query->execute(array(':id' => $date)); $result = $query->fetchAll(PDO::FETCH_ASSOC); echo json_encode($result); $dbConn = null; } ?>