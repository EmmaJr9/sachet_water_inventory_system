<?php
include('config.php'); function lastID($dbConn){ $sql = "SELECT count(*) FROM staff"; $result = $dbConn->prepare($sql); $result->execute(); return $result->fetchColumn(); } if ($_SERVER['REQUEST_METHOD'] == 'POST' && $_GET['action'] == 'insert') { $data = json_decode(file_get_contents("php://input"), true); $staff_id = "STFF_".sprintf('%03s', lastID($dbConn)+1); $staff_first_name = $data['staff_first_name']; $staff_last_name = $data['staff_last_name']; $staff_phone = $data['staff_phone']; $staff_role = $data['staff_role']; $date_created = date('Y-m-d'); $staff_password = $data['staff_password']; $sql = "INSERT INTO staff (staff_id, staff_first_name, staff_last_name, staff_phone, staff_role, date_created, staff_password) VALUES (:staff_id, :staff_first_name, :staff_last_name, :staff_phone, :staff_role, :date_created, :staff_password)"; $query = $dbConn->prepare($sql); $query->bindParam(':staff_id', $staff_id); $query->bindParam(':staff_first_name', $staff_first_name); $query->bindParam(':staff_last_name', $staff_last_name); $query->bindParam(':staff_phone', $staff_phone); $query->bindParam(':staff_role', $staff_role); $query->bindParam(':date_created', $date_created); $query->bindParam(':staff_password', $staff_password); if ($query->execute()) { echo json_encode(['status' => 'success', 'message' => 'Staff record created successfully']); } else { echo json_encode(['status' => 'error', 'message' => 'Failed to create staff record']); } } if ($_SERVER['REQUEST_METHOD'] == 'PUT' && $_GET['action'] == 'update') { parse_str(file_get_contents('php://input'), $putData); $id = $putData['id']; $staff_id = $putData['staff_id']; $staff_first_name = $putData['staff_first_name']; $staff_last_name = $putData['staff_last_name']; $staff_phone = $putData['staff_phone']; $staff_role = $putData['staff_role']; $date_created = $putData['date_created']; $staff_password = $putData['staff_password']; $sql = "UPDATE staff SET staff_id=:staff_id, staff_first_name=:staff_first_name, staff_last_name=:staff_last_name, staff_phone=:staff_phone, staff_role=:staff_role, date_created=:date_created, staff_password=:staff_password WHERE id=:id"; $query = $dbConn->prepare($sql); $query->bindParam(':id', $id); $query->bindParam(':staff_id', $staff_id); $query->bindParam(':staff_first_name', $staff_first_name); $query->bindParam(':staff_last_name', $staff_last_name); $query->bindParam(':staff_phone', $staff_phone); $query->bindParam(':staff_role', $staff_role); $query->bindParam(':date_created', $date_created); $query->bindParam(':staff_password', $staff_password); if ($query->execute()) { echo json_encode(['status' => 'success', 'message' => 'Staff record updated successfully']); } else { echo json_encode(['status' => 'error', 'message' => 'Failed to update staff record']); } } if ($_SERVER['REQUEST_METHOD'] == 'DELETE' && $_GET['action'] == 'delete') {$data = json_decode(file_get_contents("php://input"), true);$id = $data['id']; $sql = "DELETE FROM staff WHERE id=:id"; $query = $dbConn->prepare($sql); $query->bindParam(':id', $id); if ($query->execute()) { echo json_encode(['status' => 'success', 'message' => 'Staff record deleted successfully']); } else { echo json_encode(['status' => 'error', 'message' => 'Failed to delete staff record']); } } if ($_SERVER['REQUEST_METHOD'] == 'GET' && $_GET['action'] == 'get' && isset($_GET['id'])) { $id = $_GET['id']; $sql = "SELECT * FROM staff WHERE id=:id"; $query = $dbConn->prepare($sql); $query->bindParam(':id', $id); if ($query->execute()) { $result = $query->fetch(PDO::FETCH_ASSOC); if ($result) { echo json_encode(['status' => 'success', 'data' => $result]); } else { echo json_encode(['status' => 'error', 'message' => 'Staff record not found']); } } else { echo json_encode(['status' => 'error', 'message' => 'Failed to get staff record']); } } if ($_SERVER['REQUEST_METHOD'] == 'GET' && $_GET['action'] == 'get_all') { $sql = "SELECT * FROM staff"; if ($result = $dbConn->query($sql)) { $staff = $result->fetchAll(PDO::FETCH_ASSOC); echo json_encode(['status' => 'success', 'data' => $staff]); } else { echo json_encode(['status' => 'error', 'message' => 'Failed to get staff records']); } } ?>